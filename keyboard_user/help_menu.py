from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram import Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram import Router, F

from .main_menu import return_to_user_menu

router = Router()


class Step(StatesGroup):
    help_menu = State()
    help_input = State()


@router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
async def help(message: Message, state: FSMContext):
    await state.set_state(Step.help_menu)
    await message.answer(
        """–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:
üîç –ü–æ–∏—Å–∫ –º–µ—Å—Ç - –ø–æ–∏—Å–∫ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –≤–∞—Å –º–µ—Å—Ç
üí¨ –ß–∞—Ç —Å –ò–ò - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ –¥—É—à–∞–º –ø–æ–±–æ–ª—Ç–∞—Ç—å —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º
ü™™ –ü—Ä–æ—Ñ–∏–ª—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö, –æ—Ç–∑—ã–≤–∞—Ö –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
‚ùì –ü–æ–º–æ—â—å - –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–µ–ø–æ–ª–∞–¥–∫–µ –±–æ—Ç–∞ —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏""",
        reply_markup=help_reply_keyboard,
    )


help_reply_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–¥–¥–µ—Ä–∂–∫–µ")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")],
    ],
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç",
    resize_keyboard=True,
)

help_input_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ù–∞–∑–∞–¥")],
    ],
    resize_keyboard=True,
)


@router.message(Step.help_menu, F.text == "–ù–∞–∑–∞–¥")
async def exit(message: Message, state: FSMContext):
    await state.clear()
    await return_to_user_menu("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞", message)


@router.message(Step.help_menu)
async def help_input_request(message: Message, state: FSMContext):
    await state.set_state(Step.help_input)
    await message.answer(
        "–û–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É üëá",
        reply_markup=help_input_keyboard,
    )


@router.message(Step.help_input, F.text == "–ù–∞–∑–∞–¥")
async def help_input_back(message: Message, state: FSMContext):
    await state.set_state(Step.help_menu)
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=help_reply_keyboard,
    )


@router.message(Step.help_input)
async def process_support_question(message: Message, state: FSMContext):
    user_question = message.text
    await return_to_user_menu(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.", message
    )
    print(user_question)
    await state.clear()
