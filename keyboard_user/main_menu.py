from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram import Router
from aiogram.filters import CommandStart
import datetime


router = Router()
error_rt = Router()

main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –º–µ—Å—Ç"), KeyboardButton(text="ü§ñ –ß–∞—Ç —Å –ò–ò")],
        [KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å"), KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")],
    ],
    is_persistent=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç",
)


async def return_to_user_menu(
    msg: str,
    message: Message,
    keyboard: ReplyKeyboardMarkup = main_menu,
) -> None:
    await message.answer(
        msg,
        reply_markup=keyboard,
    )


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    """
    –ö—Ä–∞—Å–∏–≤—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ /start
    """
    now = datetime.datetime.now()
    if 4 <= now.hour <= 11:
        await message.answer(f"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, {(message.from_user.full_name)}! üåÑ")
    if 12 <= now.hour <= 16:
        await message.answer(f"–î–æ–±—Ä—ã–π –¥–µ–Ω—å, {(message.from_user.full_name)}! ‚õÖ")
    if 17 <= now.hour <= 23:
        await message.answer(f"–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, {(message.from_user.full_name)}! üåá")
    if 0 <= now.hour <= 3:
        await message.answer(f"–î–æ–±—Ä–æ–π –Ω–æ—á–∏, {(message.from_user.full_name)}! üåÉ")
    await return_to_user_menu(
        """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ Location Chooser, –≤–æ—Ç –º–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏:
üîç –ü–æ–∏—Å–∫ –º–µ—Å—Ç - –ø–æ–∏—Å–∫ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –≤–∞—Å –º–µ—Å—Ç
üí¨ –ß–∞—Ç —Å –ò–ò - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ –¥—É—à–∞–º –ø–æ–±–æ–ª—Ç–∞—Ç—å —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º
ü™™ –ü—Ä–æ—Ñ–∏–ª—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö, –æ—Ç–∑—ã–≤–∞—Ö –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
‚ùì –ü–æ–º–æ—â—å - –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–µ–ø–æ–ª–∞–¥–∫–µ –±–æ—Ç–∞ —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏""",
        message,
    )


@error_rt.message()
async def unknown_command(message: Message) -> None:
    """
    –û—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    await message.answer(
        "–£–≤—ã, –º–Ω–µ –Ω–µ –ø–æ–Ω—è—Ç–Ω—ã –≤–∞—à–∏ —Å–ª–æ–≤–∞, –∏–±–æ —è –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã üòî"
    )
