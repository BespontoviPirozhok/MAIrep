from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram import Router
from aiogram.filters import CommandStart

import datetime
import database.requests as rq


router = Router()
error_rt = Router()

main_menu_reply = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="üîç –ü–æ–∏—Å–∫ –º–µ—Å—Ç"),
            KeyboardButton(text="ü•≥ –ü–æ–∏—Å–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π"),
        ],
        [KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å"), KeyboardButton(text="ü§ñ –ß–∞—Ç —Å –ò–ò")],
    ],
    is_persistent=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç",
)


back_reply = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ù–∞–∑–∞–¥")],
    ],
    resize_keyboard=True,
    is_persistent=True,
)


async def return_to_user_menu(
    msg: str,
    message: Message,
    keyboard: ReplyKeyboardMarkup = main_menu_reply,
) -> None:
    await message.answer(
        msg,
        reply_markup=keyboard,
    )


def pretty_date(date_str: str) -> str:
    months_ru = [
        "—è–Ω–≤–∞—Ä—è",
        "—Ñ–µ–≤—Ä–∞–ª—è",
        "–º–∞—Ä—Ç–∞",
        "–∞–ø—Ä–µ–ª—è",
        "–º–∞—è",
        "–∏—é–Ω—è",
        "–∏—é–ª—è",
        "–∞–≤–≥—É—Å—Ç–∞",
        "—Å–µ–Ω—Ç—è–±—Ä—è",
        "–æ–∫—Ç—è–±—Ä—è",
        "–Ω–æ—è–±—Ä—è",
        "–¥–µ–∫–∞–±—Ä—è",
    ]
    year, month, day = map(int, date_str.split("-"))

    return f"{day} {months_ru[month-1]} {year} –≥."


@router.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    await rq.set_user(
        tg_id=message.from_user.id, regist_date=datetime.datetime.now().date()
    )
    """–ö—Ä–∞—Å–∏–≤—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ /start"""

    now = datetime.datetime.now()
    hour = now.hour
    time_str = now.strftime("%H:%M")  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –∫–∞–∫ –ß–ß:–ú–ú
    first_name = message.from_user.first_name
    emoji = "üåÉ"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É
    if 4 <= hour <= 11:
        greeting = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ"
        emoji = "üåÑ"
    elif 12 <= hour <= 16:
        greeting = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å"
        emoji = "‚õÖ"
    elif 17 <= hour <= 23:
        greeting = "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä"
        emoji = "üåá"
    else:
        greeting = "–î–æ–±—Ä–æ–π –Ω–æ—á–∏"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer(
        f"–í –ú–æ—Å–∫–≤–µ —Å–µ–π—á–∞—Å {time_str}\n{greeting}, {first_name}! {emoji}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é
    await return_to_user_menu(
        """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ Location Chooser, –≤–æ—Ç –º–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏:
üîç –ü–æ–∏—Å–∫ –º–µ—Å—Ç - –ø–æ–∏—Å–∫ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –≤–∞—Å –º–µ—Å—Ç
üí¨ –ß–∞—Ç —Å –ò–ò - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ –¥—É—à–∞–º –ø–æ–±–æ–ª—Ç–∞—Ç—å —Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º
ü™™ –ü—Ä–æ—Ñ–∏–ª—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö, –æ—Ç–∑—ã–≤–∞—Ö –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
‚ùì –ü–æ–º–æ—â—å - –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω–æ–π —Å–ø—Ä–∞–≤–∫–∏ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–µ–ø–æ–ª–∞–¥–∫–µ –±–æ—Ç–∞ —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏""",
        message,
    )


@error_rt.message()
async def unknown_command(message: Message) -> None:
    """
    –û—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    await return_to_user_menu(
        "–£–≤—ã, –º–Ω–µ –Ω–µ –ø–æ–Ω—è—Ç–Ω—ã –≤–∞—à–∏ —Å–ª–æ–≤–∞, –∏–±–æ —è –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã üòî", message
    )
