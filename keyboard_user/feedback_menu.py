from aiogram.types import (
    Message,
    KeyboardButton,
    ReplyKeyboardMarkup,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    CallbackQuery,
    ReplyKeyboardRemove,
)
from aiogram import Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram import Router, F
from aiogram.utils.keyboard import InlineKeyboardBuilder

from .search_menu import place_view_reply, place_view_reply_visited, get_place_info_text

router = Router()


class Step(StatesGroup):  # —Å–æ—Å—Ç–æ—è–Ω–∏—è
    place_view = State()  # –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Å—Ç–µ
    feedback = State()  # –æ—Å—Ç–∞–≤–ª—è–µ–º 1-5 –∑–≤–µ–∑–¥
    waiting_comment = State()
    confirm_feedback = State()


feedback_rating_inline = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(
                text="–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø–æ—Å–µ—â–µ–Ω–Ω–æ–µ –±–µ–∑ –æ—Ü–µ–Ω–∫–∏", callback_data="no_comments"
            )
        ],
        [
            InlineKeyboardButton(text="1 ‚≠ê", callback_data="star_1"),
            InlineKeyboardButton(text="2 ‚≠ê", callback_data="star_2"),
            InlineKeyboardButton(text="3 ‚≠ê", callback_data="star_3"),
            InlineKeyboardButton(text="4 ‚≠ê", callback_data="star_4"),
            InlineKeyboardButton(text="5 ‚≠ê", callback_data="star_5"),
        ],
        [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_place_view")],
    ],
)


@router.message(Step.place_view, F.text == "–û—Ç–º–µ—Ç–∏—Ç—å —ç—Ç–æ –º–µ—Å—Ç–æ –∫–∞–∫ –ø–æ—Å–µ—â–µ–Ω–Ω–æ–µ")
async def rating(message: Message, state: FSMContext):
    await state.set_state(Step.feedback)
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ", reply_markup=ReplyKeyboardRemove()
    )
    await message.answer(
        "–ù–∞—Å–∫–æ–ª—å–∫–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –º–µ—Å—Ç–æ –æ—Ç 1 –¥–æ 5?:",
        reply_markup=feedback_rating_inline,
    )


@router.callback_query(F.data == "back_to_place_view")
async def back_to_place_view_handler(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    place = data.get("current_place")
    await state.set_state(Step.place_view)
    await callback.message.delete()
    await callback.message.answer(
        get_place_info_text(place), reply_markup=place_view_reply
    )
    await callback.answer()


@router.callback_query(F.data.startswith("star_"))
async def handle_rating(callback: CallbackQuery, state: FSMContext):
    rating = int(callback.data.split("_")[1])

    await state.update_data(user_rating=rating)

    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [  # –ö–∞–∂–¥—ã–π —Ä—è–¥ - –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
                InlineKeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_comment")
            ]
        ]
    )

    await callback.message.edit_text(
        f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É {rating} ‚≠ê!\n–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π? –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–∏–∂–µ!",
        reply_markup=keyboard,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
@router.callback_query(F.data == "skip_comment", Step.waiting_comment)
async def skip_comment(callback: CallbackQuery, state: FSMContext):
    await show_confirmation(callback.message, state)
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
@router.message(Step.waiting_comment, F.text)
async def handle_comment(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    await state.update_data(user_comment=message.text)
    await show_confirmation(message, state)


async def show_confirmation(message: Message, state: FSMContext):
    data = await state.get_data()
    rating = data["user_rating"]
    comment = data.get("user_comment", "–±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è")

    text = (
        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ:\n"
        f"‚òÖ –û—Ü–µ–Ω–∫–∞: {rating}\n"
        f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}\n\n"
        "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ?"
    )

    await message.answer(
        text,
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_feedback"
                    ),
                    InlineKeyboardButton(
                        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_feedback"
                    ),
                ]
            ]
        ),
    )
    await state.set_state(Step.confirm_feedback)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
@router.callback_query(F.data == "confirm_feedback", Step.confirm_feedback)
async def confirm_feedback(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()

    # –ó–¥–µ—Å—å —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    # await save_to_database(callback.from_user.id, data)

    # –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –º–µ—Å—Ç—É
    await callback.message.edit_text("‚úÖ –û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    await return_to_place_view(callback.message, state)
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
@router.callback_query(F.data == "cancel_feedback", Step.confirm_feedback)
async def cancel_feedback(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("‚ùå –û—Ç–∑—ã–≤ –Ω–µ –±—ã–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
    await return_to_place_view(callback.message, state)
    await callback.answer()


async def return_to_place_view(message: Message, state: FSMContext):
    await state.clear()
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –º–µ—Å—Ç–∞
    # —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–ú–µ—Å—Ç–æ –ø–æ—Å–µ—â–µ–Ω–æ"
    # –ù–∞–ø—Ä–∏–º–µ—Ä:
    data = await state.get_data()
    place = data.get("current_place")
    await message.answer(
        f"–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ—Å—Ç—É {place}...",
        reply_markup=place_view_reply_visited,  # –ù–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
    )
