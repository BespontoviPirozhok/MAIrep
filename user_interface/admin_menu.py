from aiogram.types import (
    Message,
    KeyboardButton,
    ReplyKeyboardMarkup,
    InlineKeyboardButton,
    CallbackQuery,
    ReplyKeyboardRemove,
)
from aiogram import Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram import Router, F
from aiogram.utils.keyboard import InlineKeyboardBuilder

from user_interface.main_menu import (
    admin_menu_reply,
    return_to_user_menu,
    back_reply,
)

from roles.roles_main import user_check, manager_check, admin_check, get_user_status

from database.requests import (
    get_place,
    add_place,
    get_comments,
    get_user,
    change_status_user,
    delete_all_user_non_empty_comments,
)

from map_and_events.map import map_search

router = Router()

admin_extended_reply = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
            KeyboardButton(text="–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∏–º–ª–∏–¥—É?"),
        ],
        [
            KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å"),
            KeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é"),
        ],
    ],
    is_persistent=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç",
)
delete_comments_reply = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å"),
        ],
        [
            KeyboardButton(text="–ù–µ —É–¥–∞–ª—è—Ç—å"),
        ],
    ],
    is_persistent=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç",
)


class Step(StatesGroup):
    admin_menu = State()
    give_roles = State()
    ban_unban = State()


from aiogram.types import ReplyKeyboardMarkup, KeyboardButton


async def handle_role_assignment(message: Message, user_tg_id: int):
    user = await get_user(tg_id=user_tg_id)

    if user.user_status == 3:
        await message.answer(
            "–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –µ–≥–æ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞",
            reply_markup=back_reply,
        )
        return

    status_text = await get_user_status(user_tg_id)

    roles = [
        (3, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"),
        (2, "–ú–µ–Ω–µ–¥–∂–µ—Ä"),
        (1, "–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"),
        (0, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏"),
    ]

    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–µ–∫—É—â—É—é —Ä–æ–ª—å –∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    available_roles = [
        KeyboardButton(text=role_name)
        for role_id, role_name in roles
        if role_id != user.user_status
    ]

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[btn] for btn in available_roles]  # –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ä—è–¥—É
        + [[KeyboardButton(text="–ù–∞–∑–∞–¥")]],  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä—è–¥
        resize_keyboard=True,
    )

    await message.answer(
        f"–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {status_text}, –∫–∞–∫—É—é —Ä–æ–ª—å —Ö–æ—Ç–∏—Ç–µ –µ–º—É –≤—ã–¥–∞—Ç—å:",
        reply_markup=keyboard,
    )


@router.message(F.text == "‚ìÇÔ∏è –ê–¥–º–∏–Ω-–º–µ–Ω—é")
async def exit(message: Message, state: FSMContext):
    user_id = message.from_user.id
    if not await admin_check(user_id):
        user_role = await get_user_status(user_id)
        await return_to_user_menu(
            user_id,
            f"–í—ã - {user_role}, –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!",
            message,
        )
    else:
        await state.set_state(Step.admin_menu)
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω-–º–µ–Ω—é! –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∫ –≤—Å–µ–º —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è",
            reply_markup=admin_extended_reply,
        )


@router.message(Step.admin_menu, F.text == "–ù–∞–∑–∞–¥ –≤ –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu(message: Message, state: FSMContext):
    await state.clear()
    await return_to_user_menu(
        message.from_user.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é", message
    )


@router.message(Step.admin_menu, F.text == "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def role_change_welcome(message: Message, state: FSMContext):
    await state.set_state(Step.give_roles)
    await message.answer(
        """–°–ø—Ä–∞–≤–∫–∞ –æ –ø—Ä–∞–≤–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–µ–π:
- *–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å*: –æ—Ç–º–µ—Ç–∫–∞/—Å–Ω—è—Ç–∏–µ –æ—Ç–º–µ—Ç–∫–∏ –æ –ø–æ—Å–µ—â–µ–Ω–∏–∏ –º–µ—Å—Ç –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.
- *–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å*: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ –æ—Ü–µ–Ω–æ–∫.
- *–ú–µ–Ω–µ–¥–∂–µ—Ä* (–≤–∫–ª—é—á–∞—è –ø—Ä–∞–≤–∞ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è): —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–π –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–µ—Å—Ç.
- *–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä*: —Å–º–µ–Ω–∞ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫–æ –≤—Å–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–º —Ñ—É–Ω–∫—Ü–∏—è–º).

–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ–≥–æ —Ä–æ–ª–∏.""",
        reply_markup=back_reply,
        parse_mode="MARKDOWN",
    )


@router.message(Step.give_roles, F.text == "–ù–∞–∑–∞–¥")
async def role_change_exit(message: Message, state: FSMContext):
    await state.set_state(Step.admin_menu)
    await message.answer(
        "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –ê–¥–º–∏–Ω-–º–µ–Ω—é",
        reply_markup=admin_extended_reply,
    )


@router.message(Step.give_roles, F.text == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
async def role_change_exit(message: Message, state: FSMContext):
    data = await state.get_data()
    tg_id = data.get("tg_id")
    await change_status_user(tg_id, 3)
    await state.update_data(tg_id=None)
    await message.answer(
        "–í—ã –≤—ã–¥–∞–ª–∏ –¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ tg id –Ω–∏–∂–µ.",
        reply_markup=back_reply,
    )


@router.message(Step.give_roles, F.text == "–ú–µ–Ω–µ–¥–∂–µ—Ä")
async def role_change_exit(message: Message, state: FSMContext):
    data = await state.get_data()
    tg_id = data.get("tg_id")
    await change_status_user(tg_id, 2)
    await state.update_data(tg_id=None)
    await message.answer(
        "–í—ã –≤—ã–¥–∞–ª–∏ –¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–æ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞.\n\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ tg id –Ω–∏–∂–µ.",
        reply_markup=back_reply,
    )


@router.message(Step.give_roles, F.text == "–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
async def role_change_exit(message: Message, state: FSMContext):
    data = await state.get_data()
    tg_id = data.get("tg_id")
    await change_status_user(tg_id, 1)
    await message.answer(
        "–í—ã –≤—ã–¥–∞–ª–∏ –¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–æ–ª—å –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ tg id –Ω–∏–∂–µ.",
        reply_markup=back_reply,
    )


@router.message(Step.give_roles, F.text == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏")
async def role_change_exit(message: Message, state: FSMContext):
    data = await state.get_data()
    tg_id = data.get("tg_id")
    await change_status_user(tg_id, 0)
    await message.answer(
        "–í—ã –æ–≥—Ä–∞–Ω–∏—á–∏–ª–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –æ—Ü–µ–Ω–∫–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑–≤–æ–∑—Ä–∞—Ç–Ω–æ.",
        reply_markup=delete_comments_reply,
    )


@router.message(Step.give_roles, F.text == "–£–¥–∞–ª–∏—Ç—å")
async def role_change_exit(message: Message, state: FSMContext):
    data = await state.get_data()
    tg_id = data.get("tg_id")
    await delete_all_user_non_empty_comments(tg_id)
    await message.answer(
        "–í—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –æ—Ü–µ–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–¥–∞–ª–µ–Ω—ã\n\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ tg id –Ω–∏–∂–µ.",
        reply_markup=back_reply,
    )


@router.message(Step.give_roles, F.text == "–ù–µ —É–¥–∞–ª—è—Ç—å")
async def role_change_exit(message: Message):
    await message.answer(
        "–û—Ü–µ–Ω–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–µ—Ç—Ä–æ–Ω—É—Ç—ã–º–∏\n\n–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ tg id –Ω–∏–∂–µ.",
        reply_markup=back_reply,
    )


@router.message(Step.give_roles)
async def role_change_menu(message: Message, state: FSMContext):
    raw_tg_id = message.text
    if len(raw_tg_id) < 8 or not raw_tg_id.isdigit():
        await message.answer(
            "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö!",
            reply_markup=back_reply,
        )
        return

    tg_id = int(raw_tg_id)
    if not await get_user(tg_id):
        await message.answer(
            "–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–æ—Ç–æ–º!",
            reply_markup=back_reply,
        )
    elif tg_id == message.from_user.id:
        await message.answer_sticker(
            r"CAACAgIAAxkBAAEOeXpoI8k2d0KNlQNw-6N0yhw1FgF_NQACJkQAAlVjOUoDhSheRxpQOjYE"
        )
        await message.answer(
            "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å —Å–≤–æ–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è!", reply_markup=back_reply
        )
    else:
        await handle_role_assignment(message, tg_id)
        await state.update_data(tg_id=tg_id)


@router.message(Step.admin_menu, F.text == "–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∏–º–ª–∏–¥—É?")
async def role_change_welcome(message: Message, state: FSMContext):
    await message.answer_sticker(
        r"CAACAgIAAxkBAAEOeetoJG2GqFRopR3iPwYs1cXMJIXkRQACIiIAApfZIUhQxfUZvjllyjYE"
    )
    await message.answer("–¢–∏–º–ª–∏–¥—É –Ω—É–∂–Ω–æ –ø–æ—Å–ø–∞—Ç—å!", reply_markup=admin_extended_reply)
